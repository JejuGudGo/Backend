spring:
  docker:
    compose:
      enabled: ${DOCKER_COMPOSE_ENABLED}
  main:
    allow-bean-definition-overriding: true
  #  mail:
  #    host: smtp.gmail.com
  #    port: 587
  #    username: {gmail}
  #    password: {gmail pwd}
  #    properties:
  #      mail:
  #        stmp:
  #          auth: true
  #          timeout: 5000
  #          starttls:
  #            enable: true

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  data:
    redis:
      port: 6379
      host: 127.0.0.1

  springdoc:
    version: v1.0.0
    default-consumes-media-type: application/json;charset=UTF-8

  secret:
    key: ${SECRET_KEY}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: ${GOOGLE_REDIRECT_URL}
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

coolsms:
  api:
    key: ${COOLSMS_KEY}
    secret: ${COOLSMS_SECRET_KEY}

sendNumber: ${SEND_NUMBER}

logging:
  level:
    root:
      info

    org:
      springframework:
        security:
          debug

    web:
      debug

tour:
  api:
    key:
      ${TOUR_API_KEY}